import { $localize } from '@angular/localize/init';
import * as moment from 'moment';
import { Template } from '../../model/template';
import { RootConfig } from './root';

export const defaultSubs = ['+meta', 'science', 'politics', 'history', 'news', 'funny'];

export const userTemplate: Template = {
  tag: 'user',
  name: $localize`üßëÔ∏è User`,
  config: {
    type: 'core',
    default: true,
    generated: 'Generated by jenkins-ui ' + moment().toISOString(),
    description: $localize`Allows users to save useful public data in their Ext.`,
    filters: [
      { query: '+user|_user', label: $localize`üßëÔ∏è user`, group: $localize`Templates üé®Ô∏è` },
    ],
    form: [{
      key: 'liveSearch',
      type: 'boolean',
      props: {
        label: $localize`Live Search:`,
        title: $localize`Search as you type.`,
      }
    }, {
      key: 'email',
      type: 'email',
    }, {
      key: 'subscriptions',
      type: 'queries',
      props: {
        label: $localize`Subscriptions:`,
        addText: $localize`+ Add another subscription`,
      }
    }, {
      key: 'bookmarks',
      type: 'queries',
      props: {
        label: $localize`Bookmarks:`,
        addText: $localize`+ Add another bookmark`,
      }
    }, {
      key: 'alarms',
      type: 'queries',
      props: {
        label: $localize`Alarms:`,
        addText: $localize`+ Add another alarm`,
      }
    }],
    advancedForm: [{
      key: 'editors',
      type: 'tags',
      props: {
        label: $localize`Editors:`,
        addText: $localize`+ Add another editor`,
      }
    }, {
      key: 'kanbanLoadSize',
      type: 'number',
      props: {
        label: $localize`Kanban Load Size:`,
      }
    }]
  },
  defaults: <UserConfig> {
    subscriptions: defaultSubs,
  },
  schema: {
    optionalProperties: {
      liveSearch: { type: 'boolean' },
      email: { type: 'string' },
      lastNotified: { type: 'string' },
      subscriptions: { elements: { type: 'string' } },
      bookmarks: { elements: { type: 'string' } },
      alarms: { elements: { type: 'string' } },
      editors: { elements: { type: 'string' } },
      userThemes: { values: { type: 'string' } },
      userTheme: { type: "string" },
      kanbanLoadSize: { type: "uint8" },
    }
  },
};

export interface UserConfig extends RootConfig {
  liveSearch?: boolean;
  email?: string;
  lastNotified?: string;
  subscriptions?: string[];
  bookmarks?: string[];
  alarms?: string[];
  editors?: string[];
  userThemes?: Record<string, string>;
  userTheme?: string;
  kanbanLoadSize?: number;
}

import * as moment from 'moment';
import { Plugin } from '../model/plugin';
import { Mod } from '../model/tag';

const errorPlugin: Plugin = {
  tag: '+plugin/error',
  name: $localize`‚ö†Ô∏è Error`,
  config: {
    mod: $localize`‚ö†Ô∏è Error`,
    default: true,
    generated: 'Generated by jasper-ui ' + moment().toISOString(),
    icons: [{ label: $localize`‚ö†Ô∏è`, order: 3 }],
    filters: [
      { query: '+plugin/error', label: $localize`‚ö†Ô∏è error`, group: $localize`Plugins üß∞Ô∏è` },
    ],
    actions: [
      { tag: '+plugin/error', labelOn: $localize`retry` },
    ],
    description: $localize`Marks a Ref as errored.`,
  },
};

const logPlugin: Plugin = {
  tag: '+plugin/log',
  name: $localize`ü™µ Log`,
  config: {
    mod: $localize`‚ö†Ô∏è Error`,
    default: true,
    generated: 'Generated by jasper-ui ' + moment().toISOString(),
    settings: $localize`errors`,
    icons: [{ label: $localize`ü™µ`, order: 3 }],
    filters: [
      { query: '+plugin/log', label: $localize`ü™µ logs`, group: $localize`Plugins üß∞Ô∏è` },
    ],
    description: $localize`Logs associated with a Ref.`,
  },
  generateMetadata: true,
};

export const errorMod: Mod = {
  plugins: {
    error: errorPlugin,
    log: logPlugin,
  },
}

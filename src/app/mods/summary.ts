import * as moment from 'moment';
import { Plugin } from '../model/plugin';

export const summaryQueryPlugin: Plugin = {
  tag: 'plugin/summary',
  name: '✂️️💭️ Summarize',
  config: {
    mod: $localize`✂️ Summarize`,
    type: 'tool',
    default: false,
    add: true,
    submitText: true,
    signature: '+plugin/summary',
    generated: $localize`Generated by jasper-ui ${moment().toISOString()}`,
    description: $localize`Send this Ref to the ai to create a summary response.`,
    icons: [{ thumbnail: $localize`✂️️💭️` }],
    filters: [
      { query: 'plugin/summary', label: $localize`✂️️💭️ summarize`, group: $localize`Notifications ✉️` },
    ],
    advancedActions: [
      { tag: 'plugin/summary', labelOff: $localize`summarize`, global: true }
    ],
  },
};

export const summaryPlugin: Plugin = {
  tag: '+plugin/summary',
  name: '✂️️ OpenAI Summary',
  config: {
    mod: $localize`✂️ Summarize`,
    type: 'tool',
    default: false,
    signature: '+plugin/summary',
    generated: $localize`Generated by jasper-ui ${moment().toISOString()}`,
    description: $localize`AI signature tag. Plugin configures OpenAi to respond to 'plugin/summary' prompts
    and sign this response with this tag. Plugin data contains token usage stats.`,
    icons: [{ thumbnail: $localize`✂️️` }],
    filters: [
      { query: '+plugin/summary', label: $localize`✂️️ summary`, group: $localize`Plugins 🧰️` },
    ],
    titlePrefix: $localize`AI Summary: `,
    systemPrompt: $localize`Summarize the following:`,
  },
  generateMetadata: true,
};

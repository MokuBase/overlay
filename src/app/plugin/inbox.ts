import * as _ from 'lodash-es';
import * as moment from 'moment';
import { Plugin } from '../model/plugin';
import { Ref } from '../model/ref';
import { authors } from '../util/format';
import { removeOriginWildcard, prefix, localTag } from '../util/tag';

export const inboxPlugin: Plugin = {
  tag: 'plugin/inbox',
  name: 'Notifications Plugin',
  config: {
    generated: 'Generated by jenkins-ui ' + moment().toISOString(),
  },
};

export function inboxes(ref: Ref, myUserTag: string): string[] {
  return _.uniq([
    ..._.filter(authors(ref), tag => tag !== myUserTag).map(getInbox),
    ...notifications(ref),
  ]);
}

export function notifications(ref: Ref): string[] {
  return _.filter(ref.tags || [], isInbox);
}

export function isInbox(tag: string) {
  return tag.startsWith('plugin/inbox') ||
    tag.startsWith('_plugin/inbox');
}

export function getInbox(userTag: string): string {
  return prefix('plugin/inbox/', localTag(userTag));
}
